openapi: 3.0.3

info:
  title: Task Management API
  version: 1.0.0
  description: API for managing tasks

paths:  # All available endpoints
  /tasks:
    get:
      tags:
        - TaskManagement
      summary: Retrieve a paginated list of tasks
      operationId: getAllTasks
      parameters:
        - name: page
          in: query  # query parameter
          description: Page number
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful retrieval of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDto'
    post:
      summary: Create a new task
      operationId: createTask
      tags:
        - TaskManagement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequestDto'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDto'
        '400':
          description: Bad request
  /tasks/{id}:
    get:
      tags:
        - TaskManagement
      operationId: getTaskById
      summary: Retrieve a task by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDto'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      summary: Update a task
      operationId: updateTaskById
      tags:
        - TaskManagement
      parameters:
        - name: id
          in: path
          required: true
          description: id of the task to update
          schema:
            type: string
            format: uuid
            example: "f47ac10b-58cc-4372-a567-0e02b2c3d414"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateRequestDto'
      responses:
        '200':
          description: Successful update of a task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDto'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                taskNotFound:
                  summary: Task not found example
                  value:
                    status: 404
                    description: Not Found
                    message: Task not found with id:{f295da63-b69d-4fed-8b1f-d49bbc104f2b}
                    timestamp: 2025-09-29T17:11:30.2022857+02:00

    delete:
      summary: Delete a task by its id
      operationId: deleteTaskById
      tags:
        - TaskManagement
      parameters:
        - name: id
          in: path
          required: true
          description: id of the task to delete
          schema:
            type: string
            format: uuid
            example: "f47ac10b-58cc-4372-a567-0e02b2c3d414"
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

components:
  schemas:
    UUID:
      type: string
      format: uuid
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"

    TaskStatus:
      type: string
      enum:
        - TODO
        - IN_PROGRESS
        - UNDER_REVIEW
        - APPROVED
        - DONE
        - CANCELLED
      example: "TODO"

    TaskDto:
      type: object
      description: Represents a task with metadata and assignment details
      properties:
        id:
          type: string
          format: uuid  # UUID format for unique task identifier
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          description: Title of the task
          example: "Write documentation"
        description:
          type: string
          description: Detailed description of the task
          example: "Complete the API documentation for the task module"
        creationDate:
          type: string
          format: date-time  # ZonedDateTime maps to ISO 8601 date-time format
          description: Timestamp when the task was created
          example: "2025-09-28T08:30:00+01:00"
        modificationDate:
          type: string
          format: date-time
          description: Timestamp of the last modification
          example: "2025-09-29T14:45:00+01:00"
        status:
          $ref: '#/components/schemas/TaskStatus'
        ownerId:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - example: "f47ac10b-58cc-4372-a567-0e02b2c3d414"
        assigneeId:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - example: "f47ac10b-58cc-4372-a567-0e02b2c3d413"

    TaskCreateRequestDto:
      type: object
      required:
        - title
        - ownerId
      properties:
        title:
          type: string
          description: Title of the task
          example: "Write documentation"
          minLength: 1
        description:
          type: string
          description: Detailed description of the task
          example: "Complete the API documentation for the task module"
        ownerId:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        assigneeId:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - example: "f47ac10b-58cc-4372-a567-0e02b2c3d412"

    TaskUpdateRequestDto:
      type: object
      required:
        - title
        - ownerId
      properties:
        title:
          type: string
          minLength: 1
          description: Title of the task
          example: "Update documentation"
        description:
          type: string
          description: Detailed description of the task
          example: "Revise the API documentation for the task module"
        ownerId:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - example: "f47ac10b-58cc-4372-a567-0e02b2c3d414"
        assigneeId:
          allOf:
            - $ref: '#/components/schemas/UUID'
            - example: "9c858901-8a57-4791-81fe-4c455b099bc9"
        status:
          $ref: '#/components/schemas/TaskStatus'

    ErrorMessage:
      type: object
      x-import: com.task.management.exception.ErrorMessage
      properties:
        status:
          type: integer
          format: int32
        description:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time

